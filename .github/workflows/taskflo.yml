name: Compliance Email Automation

on:
  schedule:
    # Daily reminders - every day at 9:00 AM Pakistan Time (4:00 AM UTC)
    - cron: '0 4 * * *'

    # Monthly tasks - 1st of every month at 9:00 AM Pakistan Time (4:00 AM UTC)
    - cron: '0 4 1 * *'

    # Quarterly tasks - 25th of quarter-end months (Mar, Jun, Sep, Dec) at 9:00 AM Pakistan Time (4:00 AM UTC)
    - cron: '0 4 25 3,6,9,12 *'

    # Weekly reminders - every Monday at 9:00 AM Pakistan Time (4:00 AM UTC)
    - cron: '0 4 * * 1'

    # Escalation reports - every day at 11:00 AM Pakistan Time (6:00 AM UTC)
    - cron: '0 5 * * *'

  workflow_dispatch:
    inputs:
      schedule_type:
        description: 'Schedule type to run manually'
        required: true
        default: 'daily'
        type: choice
        options:
          - daily
          - monthly
          - quarterly
          - reminder
          - escalation
      dry_run:
        description: 'Run in dry-run mode (no emails sent)'
        required: false
        default: true
        type: boolean

jobs:
  send-compliance-emails:
    runs-on: ubuntu-latest
    environment: 'env'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas python-dotenv

      - name: Determine schedule type
        id: schedule_type
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "TYPE=${{ github.event.inputs.schedule_type }}" >> $GITHUB_OUTPUT
            echo "DRY_RUN=${{ github.event.inputs.dry_run }}" >> $GITHUB_OUTPUT
          else
            CURRENT_DAY=$(date +%d)
            CURRENT_MONTH=$(date +%m)
            CURRENT_DOW=$(date +%u)  # 1=Monday
            CURRENT_HOUR=$(date +%H)

            # Determine schedule type based on time (UTC)
            if [ "$CURRENT_HOUR" = "04" ]; then  # 9 AM PKT
              if [ "$CURRENT_DAY" = "01" ]; then
                echo "TYPE=monthly" >> $GITHUB_OUTPUT
              elif [ "$CURRENT_DAY" = "25" ] && [[ "$CURRENT_MONTH" =~ ^(03|06|09|12)$ ]]; then
                echo "TYPE=quarterly" >> $GITHUB_OUTPUT
              elif [ "$CURRENT_DOW" = "1" ]; then
                echo "TYPE=reminder" >> $GITHUB_OUTPUT
              else
                echo "TYPE=daily" >> $GITHUB_OUTPUT
              fi
            elif [ "$CURRENT_HOUR" = "06" ]; then  # 11 AM PKT
              echo "TYPE=escalation" >> $GITHUB_OUTPUT
            else
              echo "TYPE=skip" >> $GITHUB_OUTPUT
            fi

            echo "DRY_RUN=false" >> $GITHUB_OUTPUT
          fi

      - name: Debug environment
        run: |
          echo "=== ENVIRONMENT DEBUG ==="
          echo "Environment: ${{ job.environment }}"
          echo "Schedule type: ${{ steps.schedule_type.outputs.TYPE }}"
          echo "Dry run: ${{ steps.schedule_type.outputs.DRY_RUN }}"
          echo "Date: $(date +%Y-%m-%d)"
          echo "Time (UTC): $(date +%H:%M:%S)"

      - name: Run Compliance System
        if: steps.schedule_type.outputs.TYPE != 'skip'
        env:
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        run: |
          echo "Running compliance emails for schedule type: ${{ steps.schedule_type.outputs.TYPE }}"
          if [ "${{ steps.schedule_type.outputs.DRY_RUN }}" = "true" ]; then
            echo "üöÄ Running in DRY-RUN mode (no emails sent)"
            python script.py "${{ steps.schedule_type.outputs.TYPE }}" --dry-run
          else
            echo "üìß Running in LIVE mode (emails will be sent)"
            python script.py "${{ steps.schedule_type.outputs.TYPE }}"
          fi

      - name: Skip execution
        if: steps.schedule_type.outputs.TYPE == 'skip'
        run: echo "‚è≠Ô∏è No matching schedule ‚Äî skipping execution."

      - name: Success notification
        if: success() && steps.schedule_type.outputs.TYPE != 'skip'
        run: |
          echo "‚úÖ ${{ steps.schedule_type.outputs.TYPE }} compliance automation completed successfully!"
